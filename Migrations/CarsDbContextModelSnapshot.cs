// <auto-generated />
using System;
using CarMaintenance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarMaintenance.Migrations
{
    [DbContext(typeof(CarsDbContext))]
    partial class CarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarMaintenance.Models.Domain.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentMiles")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = new Guid("83693178-be6c-4d3a-9840-77d0d7b83913"),
                            CarName = "Toyota Camry",
                            CurrentMiles = 120000,
                            UserId = "user1"
                        },
                        new
                        {
                            CarId = new Guid("3b60efae-e751-4d4c-a9a5-50e0975499cf"),
                            CarName = "Honda Civic",
                            CurrentMiles = 90000,
                            UserId = "user1"
                        },
                        new
                        {
                            CarId = new Guid("e9819b15-3b79-4baa-b6c1-efb5321c8370"),
                            CarName = "Ford Focus",
                            CurrentMiles = 70000,
                            UserId = "user2"
                        },
                        new
                        {
                            CarId = new Guid("e2dabf2d-6d62-4430-8cbf-30731194def2"),
                            CarName = "Chevrolet Malibu",
                            CurrentMiles = 50000,
                            UserId = "user2"
                        },
                        new
                        {
                            CarId = new Guid("6093c8cb-942c-4fa9-b8d5-bc8fdc3c6212"),
                            CarName = "Nissan Altima",
                            CurrentMiles = 30000,
                            UserId = "user2"
                        });
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.MaintenanceRecord", b =>
                {
                    b.Property<Guid>("MaintenanceRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Miles")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaintenanceRecordId");

                    b.HasIndex("CarId");

                    b.ToTable("MaintenanceRecords");

                    b.HasData(
                        new
                        {
                            MaintenanceRecordId = new Guid("1613d49a-a7ea-4883-80fb-6e9a9a85b5e4"),
                            CarId = new Guid("83693178-be6c-4d3a-9840-77d0d7b83913"),
                            Component = "EngineOil",
                            Date = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 115000,
                            Type = "Change"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("ae370782-abf1-47b7-9b2a-7a2e7fd4591a"),
                            CarId = new Guid("83693178-be6c-4d3a-9840-77d0d7b83913"),
                            Component = "TransmissionFluid",
                            Date = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 118000,
                            Type = "Check"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("f59d94a8-2ecb-460b-ac59-4db634331e0c"),
                            CarId = new Guid("3b60efae-e751-4d4c-a9a5-50e0975499cf"),
                            Component = "EngineOil",
                            Date = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 85000,
                            Type = "Change"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("c0cba228-84b1-4ac8-9e0f-533cb9481676"),
                            CarId = new Guid("3b60efae-e751-4d4c-a9a5-50e0975499cf"),
                            Component = "Brakes",
                            Date = new DateTime(2021, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 88000,
                            Type = "Check"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("205ae21d-987c-44c6-87aa-28526aaf5a8e"),
                            CarId = new Guid("e9819b15-3b79-4baa-b6c1-efb5321c8370"),
                            Component = "EngineOil",
                            Date = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 68000,
                            Type = "Change"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("578d7eca-8221-4f1b-8dfe-9c6996af2e12"),
                            CarId = new Guid("e9819b15-3b79-4baa-b6c1-efb5321c8370"),
                            Component = "Tires",
                            Date = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 70000,
                            Type = "Check"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("35fd68cd-ebf4-4807-ac86-ecfb34797a17"),
                            CarId = new Guid("e2dabf2d-6d62-4430-8cbf-30731194def2"),
                            Component = "EngineOil",
                            Date = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 45000,
                            Type = "Change"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("65235f73-5590-46c9-9edd-4fa1d957f77e"),
                            CarId = new Guid("e2dabf2d-6d62-4430-8cbf-30731194def2"),
                            Component = "Battery",
                            Date = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 47000,
                            Type = "Check"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("b55b950f-c55a-4a0f-8cb5-9558813e30c3"),
                            CarId = new Guid("6093c8cb-942c-4fa9-b8d5-bc8fdc3c6212"),
                            Component = "EngineOil",
                            Date = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 25000,
                            Type = "Change"
                        },
                        new
                        {
                            MaintenanceRecordId = new Guid("c6534793-688d-4c59-a2cd-1f445861d06c"),
                            CarId = new Guid("6093c8cb-942c-4fa9-b8d5-bc8fdc3c6212"),
                            Component = "AirFilter",
                            Date = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Miles = 28000,
                            Type = "Check"
                        });
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "user1",
                            UserName = "Alice"
                        },
                        new
                        {
                            UserId = "user2",
                            UserName = "Bob"
                        });
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.Car", b =>
                {
                    b.HasOne("CarMaintenance.Models.Domain.User", null)
                        .WithMany("Cars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.MaintenanceRecord", b =>
                {
                    b.HasOne("CarMaintenance.Models.Domain.Car", null)
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.Car", b =>
                {
                    b.Navigation("MaintenanceRecords");
                });

            modelBuilder.Entity("CarMaintenance.Models.Domain.User", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
